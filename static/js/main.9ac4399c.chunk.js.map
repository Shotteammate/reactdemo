{"version":3,"sources":["components/JsonInputField.js","components/PlanDetails.js","components/SubscriptionPlan.js","App.js","reportWebVitals.js","index.js"],"names":["JsonInputField","updateData","useState","data","setData","isError","setIsError","isValidJSON","str","JSON","parse","err","className","htmlFor","id","name","value","onChange","e","target","onFocus","onClick","dataArray","disabled","PlanDetails","selectedPlan","setSelectedPlan","plans","price","length","colSpan","map","plan","service","standard_plan","premium_plan","type","checked","SubscriptionPlan","payload","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac4399c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './JsonInputField.css'\n\nconst JsonInputField = ({updateData}) => {\n    const [data, setData] = useState('')\n    const [isError, setIsError] = useState(false)\n\n    const handleOnChange = (e) => {\n        setData(e.target.value)\n    }\n\n    const handleSubmit = () => {\n        if (isValidJSON(data)){\n            try {\n                const dataArray = JSON.parse(data)\n                updateData(dataArray)\n            } catch (err) {\n                // TODO: popup show error\n                setIsError(true)\n            }\n        } else {\n            setIsError(true)\n        }\n    }\n\n    const isValidJSON = (str) => {\n        try {\n            JSON.parse(str)\n        } catch (err) {\n            return false\n        }\n        return true\n    }\n\n    const clearErrorStatus = () => {\n        setIsError(false)\n    }\n\n    return (\n        <div className='input-container'>\n            <h4>Input</h4>\n            <label htmlFor='json_data'>\n                <textarea\n                    className=\"input-area\"\n                    id=\"json_data\"\n                    name=\"generalTextArea\"\n                    value={data}\n                    onChange={handleOnChange}\n                    onFocus={clearErrorStatus}\n                >\n                </textarea>\n            </label>\n            <button \n                className=\"submit-btn\"\n                onClick={handleSubmit}\n                disabled={data===''}\n            >Submit</button>\n            {isError && <div className=\"error-box\">JSON input is not valid. Please try again.</div>}\n        </div>\n    )\n}\n\nexport default JsonInputField;","import React, { useState } from 'react';\nimport './PlanDetails.css'\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst PlanDetails = ({data}) => {\n    const [selectedPlan, setSelectedPlan] = useState(\"standard_plan\")\n    const plans = [\n        {id: \"standard_plan\", name:\"Standard Plan\", price: 0},\n        {id: \"premium_plan\", name:\"Premium Plan\", price: 388}\n    ]\n\n    const handleChoosePlan = (e) => {\n        setSelectedPlan(e.target.value)\n    }\n\n    return (\n        <div className=\"details-container\">\n            <h4 className=\"heading\">Choose Plan</h4>\n            {data.length > 0 && <table className=\"plan-table\">\n                <tbody>\n                    <tr>\n                        <td colSpan={2}></td>\n                        {plans.map((plan) => (\n                            <td key={plan.id} colSpan={1}>\n                                <div className=\"plan-name\">{plan.name}</div>\n                            </td>\n                        ))}\n                    </tr>\n                    {\n                        data.map((service) => (\n                            <tr key={service.id} className=\"service-row\">\n                                <td colSpan={2} className=\"service-name\">{service.name}</td>\n                                <td colSpan={1}>{service.standard_plan? <CheckIcon/> : <ClearIcon/>}</td>\n                                <td colSpan={1}>{service.premium_plan? <CheckIcon/> : <ClearIcon/>}</td>\n                            </tr>\n                        ))\n                    }\n                    <tr onChange={handleChoosePlan}>\n                        <td colSpan={2}></td>\n                        {plans.map((plan) => (\n                            <td>\n                                <input\n                                    key={plan.id}\n                                    type=\"radio\"\n                                    value={plan.id}\n                                    name={plan.id}\n                                    checked={selectedPlan === plan.id}\n                                /> \n                                HK${plan.price}/month\n                            </td>\n                        ))}\n                    </tr>\n                </tbody>\n            </table>}\n        </div>\n    )\n}\n\nexport default PlanDetails;","import React, { useState } from 'react';\nimport './SubscriptionPlan.css'\nimport JsonInputField from './JsonInputField'\nimport PlanDetails from './PlanDetails'\n\nconst SubscriptionPlan = () => {\n    const [data, setData] = useState([])\n    const updateData = (payload) => {\n        setData(payload);\n        console.log('parent payload: ', payload)\n        console.log('parent data: ', data)\n    }\n\n    return (\n        <div className='container'>\n            <JsonInputField updateData={updateData} />\n            <PlanDetails data={data} />\n        </div>\n    )\n}\n\nexport default SubscriptionPlan;","import './App.css';\nimport SubscriptionPlan from './components/SubscriptionPlan'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SubscriptionPlan/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}